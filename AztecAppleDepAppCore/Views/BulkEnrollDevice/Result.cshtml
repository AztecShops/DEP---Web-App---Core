@model AztecAppleDepApp.Models.BedTransactionDisplayViewModel

@{
    ViewBag.Title = "Result";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h2>Results</h2>
</div>


@if (ViewBag.TransactionNotFound == true)
{
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-danger" role="alert">
                <strong>Error:</strong> Transaction not found.
            </div>
        </div>
    </div>
}
else if (ViewBag.DeviceEnrolled == true)
{
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-danger" role="alert">
                <strong>Error:</strong> You can cannot enroll the same device(s) that is currently enrolled with another transaction.
            </div>
        </div>
    </div>
}
else
{
    using (Html.BeginForm("Process", "BulkEnrollDevice", FormMethod.Post))
    {
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.Stamp)
        @Html.HiddenFor(model => model.ObjNum)
        @Html.HiddenFor(model => model.Status)
        @Html.HiddenFor(model => model.DepTransactionId)
        @Html.HiddenFor(model => model.IsRecordProcessed)
        @Html.HiddenFor(model => model.DeviceEnrollmentTransactionId)
        @Html.HiddenFor(model => model.Note)
        @Html.HiddenFor(model => model.customerDepId)
        @Html.HiddenFor(model => model.transactionId)
        @Html.HiddenFor(model => model.depResellerId)
        @Html.HiddenFor(model => model.timeZone)
        @Html.HiddenFor(model => model.langCode)
        @Html.HiddenFor(model => model.shipTo)
        @Html.HiddenFor(model => model.orderNumber)
        @Html.HiddenFor(model => model.orderDate)
        @Html.HiddenFor(model => model.orderType)
        @Html.HiddenFor(model => model.poNumber)
        @Html.HiddenFor(model => model.customerId)
        @Html.HiddenFor(model => model.shipDate)
        @Html.HiddenFor(model => model.AccountManager)
        @Html.HiddenFor(model => model.ClientContact)
        @Html.HiddenFor(model => model.ClientEmail)
        @Html.HiddenFor(model => model.deliveryNumber)
        @Html.HiddenFor(model => model.returnTrasnactionNumber)
        @Html.HiddenFor(model => model.returnVoidNumber)
        @Html.HiddenFor(model => model.originalTransactionNumber)

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.customerDepId)
                    </strong><br />
                    @Html.DisplayFor(model => model.customerDepId)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.transactionId)
                    </strong><br />
                    @Html.DisplayFor(model => model.transactionId)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.depResellerId)
                    </strong><br />
                    @Html.DisplayFor(model => model.depResellerId)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.shipTo)
                    </strong><br />
                    @Html.DisplayFor(model => model.shipTo)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.timeZone)
                    </strong><br />
                    @Html.DisplayFor(model => model.timeZone)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.langCode)
                    </strong><br />
                    @Html.DisplayFor(model => model.langCode)
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.orderNumber)
                    </strong><br />
                    @Html.DisplayFor(model => model.orderNumber)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.orderDate)
                    </strong><br />
                    @Html.DisplayFor(model => model.orderDate)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.orderType)
                    </strong><br />
                    @Html.DisplayFor(model => model.orderType)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.customerId)
                    </strong><br />
                    @Html.DisplayFor(model => model.customerId)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.poNumber)
                    </strong><br />
                    @Html.DisplayFor(model => model.poNumber)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.deliveryNumber)
                    </strong><br />
                    @Html.DisplayFor(model => model.deliveryNumber)
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.originalTransactionNumber)
                    </strong><br />
                    @Html.DisplayFor(model => model.originalTransactionNumber)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.returnTrasnactionNumber)
                    </strong><br />
                    @Html.DisplayFor(model => model.returnTrasnactionNumber)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.returnVoidNumber)
                    </strong><br />
                    @Html.DisplayFor(model => model.returnVoidNumber)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.shipDate)
                    </strong><br />
                    @Html.DisplayFor(model => model.shipDate)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.AccountManager)
                    </strong><br />
                    @Html.DisplayFor(model => model.AccountManager)
                </div>
                <div class="form-group">
                    <strong>
                        @Html.DisplayNameFor(model => model.ClientContact)
                    </strong><br />
                    @Html.DisplayFor(model => model.ClientContact)
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-primary" role="alert">
                    <strong>These are the device(s) that we found with the transaction:</strong>
                </div>
            </div>
        </div>

        // Check for Existing Devices
        if (ViewBag.ExistingDevices == true)
        {
            int AnyReturnLeft = 0;

            // Rescanning Order Transaction
            if (ViewBag.OrderRescan == true)
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="alert alert-danger" role="alert">
                            <strong>These are device(s) are already enrolled with this transaction.</strong>
                        </div>
                    </div>
                </div>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Serial Number</th>
                            <th>Asset Tag</th>
                            <th>Enroll</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.devices.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(x => x.devices[i].DeviceId)
                                </td>
                                <td>@Html.DisplayFor(x => x.devices[i].AssetTag)</td>
                                <td>
                                    @Html.HiddenFor(x => x.devices[i].DeviceId)
                                    @Html.HiddenFor(x => x.devices[i].AssetTag)
                                    @Html.CheckBoxFor(x => x.devices[i].IsSelected, new { @onclick = "return false" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                // Return & Void Selected
                if (@ViewBag.Void != true)
                {
                    if (ViewBag.TransactionWasVoided == true)
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <div class="alert alert-danger" role="alert">
                                    <strong>This transaction was voided.</strong>
                                </div>
                            </div>
                        </div>
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Serial Number</th>
                                    <th>Asset Tag</th>
                                    <th>Enroll</th>
                                    <th>Return</th>
                                    <th>Void</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.devices.Count; i++)
                                {
                                    AnyReturnLeft = 0;
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(x => x.devices[i].DeviceId)
                                        </td>
                                        <td>
                                            @Html.HiddenFor(x => x.devices[i].DeviceId)
                                            @Html.HiddenFor(x => x.devices[i].AssetTag)
                                            @Html.CheckBoxFor(x => x.devices[i].IsSelected, new { @onclick = "return false" })
                                        </td>
                                        <td>
                                            @Html.CheckBoxFor(x => x.devices[i].IsReturn, new { @onclick = "return false" })
                                        </td>
                                        <td>
                                            Processed
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Serial Number</th>
                                    <th>Asset Tag</th>
                                    <th>Enroll</th>
                                    <th>Return</th>
                                    <th>Void</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.devices.Count; i++)
                                {
                                    AnyReturnLeft = 0;
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(x => x.devices[i].DeviceId)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(x => x.devices[i].AssetTag)
                                        </td>
                                        <td>
                                            @Html.HiddenFor(x => x.devices[i].DeviceId)
                                            @Html.HiddenFor(x => x.devices[i].AssetTag)
                                            @Html.CheckBoxFor(x => x.devices[i].IsSelected, new { @onclick = "return false" })
                                        </td>
                                        <td>
                                            @if (Model.devices[i].IsSelected == true && Model.devices[i].IsReturn == true)
                                            {   // Transaction needs to be return.
                                                @Html.CheckBoxFor(x => x.devices[i].IsReturn, new { @onclick = "return false" })
                                                AnyReturnLeft++;
                                            }
                                            else if (Model.devices[i].IsSelected == true && Model.devices[i].IsReturn == false && Model.devices[i].IsVoid == true)
                                            {
                                                @Html.CheckBoxFor(x => x.devices[i].IsReturn, new { @onclick = "return false" })
                                            }
                                            else
                                            {   // Transaction has been returned.
                                                <p>Processed</p>
                                            }
                                        </td>
                                        <td>
                                            @Html.CheckBoxFor(x => x.devices[i].IsVoid, new { @onclick = "return false" })
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }

                }
                // Already Void
                else
                {
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Serial Number</th>
                                <th>Asset Tag</th>
                                <th>Enroll</th>
                                <th>Return</th>
                                <th>Void</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.devices.Count; i++)
                            {
                                AnyReturnLeft = 0;
                                <tr>
                                    <td>
                                        @Html.DisplayFor(x => x.devices[i].DeviceId)
                                    </td>
                                    <td>@Html.DisplayFor(x => x.devices[i].AssetTag)</td>
                                    <td>
                                        @Html.HiddenFor(x => x.devices[i].DeviceId)
                                        @Html.HiddenFor(x => x.devices[i].AssetTag)
                                        @Html.CheckBoxFor(x => x.devices[i].IsSelected, new { @onclick = "return false" })
                                    </td>
                                    <td>
                                        @Html.CheckBoxFor(x => x.devices[i].IsReturn, new { @onclick = "return false" })
                                    </td>
                                    <td>
                                        <p>Processed</p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            }
            if (@ViewBag.Void != true)
            {
                if (AnyReturnLeft != 0)
                {
                    if (Model.orderType == "RE")
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group text-right">
                                    <input type="submit" value="RETURN" class="btn btn-aztecs" id="SubmitReturn" name="SubmitType" />
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    if (Model.orderType == "VD")
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group text-right">
                                    <input type="submit" value="VOID" class="btn btn-aztecs" id="SubmitVoid" name="SubmitType" />
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        }
        // New Devices
        else
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Serial Number</th>
                        <th>Asset Tag</th>
                        <th>Enroll</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.devices.Count; i++)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(x => x.devices[i].DeviceId)
                        </td>
                        <td>
                            @Html.TextBoxFor(x => x.devices[i].AssetTag, null, new { @class = "form-control", placeholder = "Asset Tag" })
                        </td>
                        <td>
                            @Html.HiddenFor(x => x.devices[i].DeviceId)
                            @Html.CheckBoxFor(x => x.devices[i].IsSelected, new { @onclick = "return false" })
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group text-right">
                        <input type="submit" value="ORDER" class="btn btn-aztecs" id="SubmitOrder" name="SubmitType" />
                    </div>
                </div>
            </div>
        }
    }
}